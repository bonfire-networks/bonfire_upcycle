<Form
  class="border-2 border-gray-400 rounded-md text-black p-4"
  for={@changeset || ValueFlows.EconomicEvent.validate_changeset()}
  opts={autocomplete: "off"}
  submit="ValueFlows.EconomicEvent:create"
  change="Bonfire.UI.ValueFlows.CreateEconomicEventLive:autocomplete"
>
  <HiddenInput name="action" value={@action} />
  <HiddenInput :if={@input_of_id} name="input_of_id" value={e(@input_of_id, "")} />
  <HiddenInput :if={@output_of_id} name="output_of_id" value={e(@output_of_id, "")} />

  <!-- Header -->
  <div class="flex justify-center">
    <Label class="font-bold text-lg text-black">
      {l("Transfer a Resource")}
    </Label>
  </div>

  <!-- From -->
  <div class="p-2 rounded-md m-1">
    {l("From: ")}
  </div>

  <!-- Receiver -->
  <div class="p-2 rounded-md m-1">
    {l("Specify the receiver")}
    <div :if={@action == "transfer"} class="flex flex-col">
      <Bonfire.UI.Common.MultiselectLive.UserSelectorLive
        label="Select a receiver"
        form_input_name="receiver"
        preloaded_options={@users_autocomplete}
        selected_options={@receiver}
      />
    </div>
  </div>

  <!-- Resource (Bonfire Component) -->
  <!-- <div class="p-2 rounded-md m-1">
    {l "Specify which resource to transfer"}
        <div class="relative flex-1">
            <Bonfire.UI.Common.MultiselectLive
            preloaded_options={e(@economic_resources_autocomplete, [])}
            selected_options={e(@economic_resource_selected, [])} 
            label={"Pick a resource..."}
            form_input_name={"resource_inventoried_as"}
            pick_event={e(@pick_event, "ValueFlows.EconomicResource:select")}
            remove_event={@remove_event}
            focus_event="ValueFlows.EconomicResource:autocomplete"
            />
        </div>
    </div> -->

  <!-- Resource Drop-down -->
  <div hidden="true">
    <Field name={:resource_inventoried_as}>
      <TextInput value={@resource_id} class="input" />
    </Field>
  </div>
  <div x-data="{ open: false }">
    <Field name={:resource_name} class="p-2 rounded-md m-1">
      {l("Resource I can offer")}
      <div class="flex w-full h-full">
        <TextInput
          value={@resource_name}
          opts={required: true, placeholder: "Select a resource"}
          class="input rounded-md block w-full text-base-content focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
        />
        <div class="absolute w-full">
          <button @click="open = !open" class="w-full h-full text-2xl" phx-click="my_agent">{l(" ")}</button>
        </div>
      </div>
      <div x-show="open" @click.away="open = false">
        {#if @intents}
          {#for resource <- @intents}
            {#if resource.onhandQuantity}
              {#if resource.onhandQuantity.hasNumericalValue > 0}
                <div>
                  <label
                    @click="open = false"
                    phx-value-id={resource.id}
                    phx-value-name={resource.name}
                    phx-value-quantity={resource.onhandQuantity.hasNumericalValue}
                    phx-click="resource_click"
                    class="block border-2 rounded-md  text-black p-1 hover:bg-blue-500 hover:text-white"
                  >
                    {l("   ")}{resource.name}{" - "}{resource.onhandQuantity.hasNumericalValue}
                  </label>
                </div>
              {/if}
            {/if}
          {/for}
        {/if}
      </div>
    </Field>
  </div>

  <!-- Quantity and Units -->
  <div class="p-2 rounded-md m-1">
    {l("Specify the quantity and units")}
    <div class="flex">
      <Inputs for={:resource_quantity}>
        <Field name={:has_numerical_value} class="flex-grow">
          <NumberInput
            opts={required: true, min: 1, max: @resource_quantity}
            class="input rounded-tl-lg rounded-bl-lg w-full"
          />
        </Field>
        <Field name={:has_unit}>
          <Select options={"TODO units": "todo"} class="select rounded-tr-lg rounded-br-lg" />
        </Field>
      </Inputs>
    </div>
  </div>

  <!-- Description -->
  <div class="p-2 rounded-md m-1">
    {l("Add an optional note about the transfer")}
    <Field name={:resource_note}>
      <TextArea class="textarea w-full rounded-md" />
    </Field>
  </div>

  <!-- Submit Button -->
  <div class="flex justify-center">
    <button
      type="submit"
      class="btn rounded-md normal-case text-base font-normal border-0 bg-indigo-600 hover:bg-indigo-400"
    >
      {l("Create Transfer")}
    </button>
  </div>
</Form>